image: docker:git
services:
  - docker:dind

stages:
  - build
  - start
  - deploy
  - stop

variables:
  STACK_NAME: isps
  FPM_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}/php-fpm
  CRON_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}/cron

build-docker-image-amd64:
  stage: build
  variables:
    IMAGE_TAG_SUFFIX: alpine-amd64
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build --cache-from ${FPM_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX} --target prod-alpine --build-arg APP_VERSION=${CI_COMMIT_TAG:-test} -t ${FPM_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX} -t ${FPM_RELEASE_IMAGE}:${CI_COMMIT_TAG:-test}-${IMAGE_TAG_SUFFIX} ${CI_PROJECT_DIR} -f .docker/php/Dockerfile
    - docker build --cache-from ${CRON_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX} --target cron-alpine --build-arg APP_VERSION=${CI_COMMIT_TAG::-test} -t ${CRON_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX} -t ${CRON_RELEASE_IMAGE}:${CI_COMMIT_TAG:-test}-${IMAGE_TAG_SUFFIX} ${CI_PROJECT_DIR} -f .docker/php/Dockerfile
    - docker push ${FPM_RELEASE_IMAGE}:${CI_COMMIT_TAG:-test}-${IMAGE_TAG_SUFFIX}
    - docker push ${FPM_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX}
    - docker push ${CRON_RELEASE_IMAGE}:${CI_COMMIT_TAG:-test}-${IMAGE_TAG_SUFFIX}
    - docker push ${CRON_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX}
  only:
    - tags

build-docker-image-arm64:
  stage: build
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${SSH_HOST}
    IMAGE_TAG_SUFFIX: alpine-arm64
  script:
    - eval $(ssh-agent -s); echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh; chmod 700 ~/.ssh; ssh-keyscan -t ed25519 $SSH_HOST >> ~/.ssh/known_hosts
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build --cache-from ${FPM_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX} --target prod-alpine --build-arg APP_VERSION=${CI_COMMIT_TAG:-test} -t ${FPM_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX} -t ${FPM_RELEASE_IMAGE}:${CI_COMMIT_TAG:-test}-${IMAGE_TAG_SUFFIX} ${CI_PROJECT_DIR} -f .docker/php/Dockerfile
    - docker build --cache-from ${CRON_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX} --target cron-alpine --build-arg APP_VERSION=${CI_COMMIT_TAG::-test} -t ${CRON_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX} -t ${CRON_RELEASE_IMAGE}:${CI_COMMIT_TAG:-test}-${IMAGE_TAG_SUFFIX} ${CI_PROJECT_DIR} -f .docker/php/Dockerfile
    - docker push ${FPM_RELEASE_IMAGE}:${CI_COMMIT_TAG:-test}-${IMAGE_TAG_SUFFIX}
    - docker push ${FPM_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX}
    - docker push ${CRON_RELEASE_IMAGE}:${CI_COMMIT_TAG:-test}-${IMAGE_TAG_SUFFIX}
    - docker push ${CRON_RELEASE_IMAGE}:latest-${IMAGE_TAG_SUFFIX}
  only:
    - tags

start-prod:
  stage: start
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${SSH_HOST}
  script:
    - eval $(ssh-agent -s); echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh; chmod 700 ~/.ssh; ssh-keyscan -t ed25519 $SSH_HOST >> ~/.ssh/known_hosts
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker stack deploy -c .docker/docker-compose-liodie.yaml ${STACK_NAME}
  environment:
    name: production
    url: https://isps.liodie.fr
    action: start
    on_stop: stop-prod
  when: manual
  only:
    - tags

stop-prod:
  stage: stop
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${SSH_HOST}
  script:
    - eval $(ssh-agent -s); echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh; chmod 700 ~/.ssh; ssh-keyscan -t ed25519 $SSH_HOST >> ~/.ssh/known_hosts
    - docker stack rm ${STACK_NAME}
  environment:
    name: production
    url: https://isps.liodie.fr
    action: stop
  when: manual
  only:
    - tags

deploy-to-prod:
  stage: deploy
  variables:
    DOCKER_HOST: ssh://${SSH_USER}@${SSH_HOST}
    IMAGE_TAG_SUFFIX: alpine-arm64
  script:
    - eval $(ssh-agent -s); echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh; chmod 700 ~/.ssh; ssh-keyscan -t ed25519 $SSH_HOST >> ~/.ssh/known_hosts
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker service update --with-registry-auth ${STACK_NAME}_php --update-monitor 10ms --image ${FPM_RELEASE_IMAGE}:${CI_COMMIT_TAG}-${IMAGE_TAG_SUFFIX}
    - docker service update --with-registry-auth ${STACK_NAME}_cron --update-monitor 10ms --image ${CRON_RELEASE_IMAGE}:${CI_COMMIT_TAG}-${IMAGE_TAG_SUFFIX}
  environment:
    name: production
    url: https://isps.liodie.fr
  when: manual
  only:
    - tags